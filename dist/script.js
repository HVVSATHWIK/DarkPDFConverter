let globalPdfDoc;async function loadPdf(){const e=document.getElementById("pdfUpload");if(!e.files.length)return void alert("Please upload a PDF file.");const t=e.files[0],a=await t.arrayBuffer();try{globalPdfDoc=await PDFLib.PDFDocument.load(a),alert("PDF loaded successfully! Now generate a preview.")}catch(e){console.error("Error loading PDF:",e),alert("Error loading PDF. Please make sure the file is a valid PDF.")}}async function generatePreview(){const e=document.getElementById("loading"),t=document.getElementById("preview"),a=document.getElementById("previewCanvas"),r=document.getElementById("themeSelect").value,o=document.getElementById("brightness").value,i=document.getElementById("contrast").value;if(!globalPdfDoc)return void alert("Please upload a PDF file first.");e.classList.remove("hidden"),e.classList.add("visible");const l=await globalPdfDoc.save();let n;try{n=await pdfjsLib.getDocument({data:l}).promise}catch(t){return console.error("Error parsing PDF:",t),alert("Error parsing PDF. Please try another file."),e.classList.remove("visible"),void e.classList.add("hidden")}try{const e=await n.getPage(1),l=e.getViewport({scale:1.5}),s=document.createElement("canvas"),d=s.getContext("2d");s.width=l.width,s.height=l.height;const c={canvasContext:d,viewport:l};await e.render(c).promise,d.globalCompositeOperation="difference",d.fillStyle="dark"===r?"white":"darker"===r?"#ccc":"#999",d.fillRect(0,0,s.width,s.height),d.globalCompositeOperation="source-over",d.filter=`brightness(${o}%) contrast(${i}%)`,a.width=s.width,a.height=s.height,a.getContext("2d").drawImage(s,0,0),t.style.display="block"}catch(e){console.error("Error generating preview:",e),alert("Error generating preview. Please try another file.")}e.classList.remove("visible"),e.classList.add("hidden")}async function convertToDarkMode(){const e=document.getElementById("loading"),t=document.getElementById("themeSelect").value,a=document.getElementById("brightness").value,r=document.getElementById("contrast").value;if(!globalPdfDoc)return void alert("Please upload a PDF file first.");e.classList.remove("hidden"),e.classList.add("visible");const o=await globalPdfDoc.save();let i;try{i=await pdfjsLib.getDocument({data:o}).promise}catch(t){return console.error("Error parsing PDF:",t),alert("Error parsing PDF. Please try another file."),e.classList.remove("visible"),void e.classList.add("hidden")}const l=i.numPages,n=await PDFLib.PDFDocument.create();for(let e=1;e<=l;e++)try{const o=await i.getPage(e),l=o.getViewport({scale:1.5}),s=document.createElement("canvas"),d=s.getContext("2d");s.width=l.width,s.height=l.height;const c={canvasContext:d,viewport:l};await o.render(c).promise,d.globalCompositeOperation="difference",d.fillStyle="dark"===t?"white":"darker"===t?"#ccc":"#999",d.fillRect(0,0,s.width,s.height),d.globalCompositeOperation="source-over",d.filter=`brightness(${a}%) contrast(${r}%)`;const g=s.toDataURL("image/png"),[m]=await Promise.all([n.embedPng(g)]),h=n.addPage([l.width,l.height]);h.drawImage(m,{x:0,y:0,width:h.getWidth(),height:h.getHeight()})}catch(t){console.error(`Error processing page ${e}:`,t),alert(`Error processing page ${e}. Skipping to next page.`);continue}try{const e=await n.save(),t=new Blob([e],{type:"application/pdf"}),a=URL.createObjectURL(t),r=document.getElementById("downloadLink");r.href=a,r.style.display="block",r.download="dark_mode_pdf.pdf"}catch(e){console.error("Error saving dark mode PDF:",e),alert("Error saving dark mode PDF. Please try again.")}e.classList.remove("visible"),e.classList.add("hidden")}pdfjsLib.GlobalWorkerOptions.workerSrc="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.worker.min.js",document.getElementById("pdfUpload").addEventListener("change",loadPdf);